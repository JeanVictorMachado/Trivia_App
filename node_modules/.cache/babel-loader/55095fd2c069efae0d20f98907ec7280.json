{"ast":null,"code":"var _jsxFileName = \"/home/jean/Trybe/projetos-Trybe/sd-06-project-trivia-react-redux/src/pages/SignIn/index.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { fetchQuestions, loginActionCreator } from '../../redux/actions';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    const token = localStorage.getItem('token');\n    this.state = {\n      name: '',\n      email: '',\n      token\n    };\n  }\n\n  handleInputChange({\n    name,\n    value\n  }) {\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleLogin(submitEvent) {\n    submitEvent.preventDefault();\n    const _this$state = this.state,\n          email = _this$state.email,\n          name = _this$state.name,\n          token = _this$state.token;\n    const _this$props = this.props,\n          logIn = _this$props.logIn,\n          history = _this$props.history,\n          loadQuestions = _this$props.loadQuestions;\n    logIn({\n      name,\n      email\n    });\n    loadQuestions(token);\n    history.push('/trivia');\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          name = _this$state2.name,\n          email = _this$state2.email;\n    return React.createElement(\"div\", {\n      className: \"login-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Nome:\"), React.createElement(\"input\", {\n      id: \"name\",\n      name: \"name\",\n      type: \"text\",\n      \"data-testid\": \"input-player-name\",\n      value: name,\n      onChange: ({\n        target\n      }) => this.handleInputChange(target),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"input-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Email:\"), React.createElement(\"input\", {\n      id: \"email\",\n      name: \"email\",\n      type: \"text\",\n      \"data-testid\": \"input-gravatar-email\",\n      value: email,\n      onChange: ({\n        target\n      }) => this.handleInputChange(target),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: !name || !email,\n      \"data-testid\": \"btn-play\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Jogar\")), React.createElement(Link, {\n      to: \"/settings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Configura\\xE7\\xF5es\"));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    logIn: ({\n      name,\n      email\n    }) => dispatch(loginActionCreator({\n      name,\n      email\n    })),\n    loadQuestions: token => dispatch(fetchQuestions(token))\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(SignIn);\nSignIn.propTypes = {\n  logIn: PropTypes.func.isRequired,\n  loadQuestions: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};","map":{"version":3,"sources":["/home/jean/Trybe/projetos-Trybe/sd-06-project-trivia-react-redux/src/pages/SignIn/index.jsx"],"names":["React","connect","PropTypes","Link","fetchQuestions","loginActionCreator","SignIn","Component","constructor","props","handleInputChange","bind","handleLogin","token","localStorage","getItem","state","name","email","value","setState","submitEvent","preventDefault","logIn","history","loadQuestions","push","render","target","mapDispatchToProps","dispatch","propTypes","func","isRequired","shape"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { fetchQuestions, loginActionCreator } from '../../redux/actions';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n\n    const token = localStorage.getItem('token');\n\n    this.state = {\n      name: '',\n      email: '',\n      token,\n    };\n  }\n\n  handleInputChange({ name, value }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleLogin(submitEvent) {\n    submitEvent.preventDefault();\n    const { email, name, token } = this.state;\n    const { logIn, history, loadQuestions } = this.props;\n\n    logIn({ name, email });\n\n    loadQuestions(token);\n\n    history.push('/trivia');\n  }\n\n  render() {\n    const { name, email } = this.state;\n\n    return (\n      <div className=\"login-in\">\n        <form onSubmit={ this.handleLogin }>\n          <div className=\"input-container\">\n            <label htmlFor=\"name\">Nome:</label>\n            <input\n              id=\"name\"\n              name=\"name\"\n              type=\"text\"\n              data-testid=\"input-player-name\"\n              value={ name }\n              onChange={ ({ target }) => this.handleInputChange(target) }\n            />\n          </div>\n          <div className=\"input-container\">\n            <label htmlFor=\"email\">Email:</label>\n            <input\n              id=\"email\"\n              name=\"email\"\n              type=\"text\"\n              data-testid=\"input-gravatar-email\"\n              value={ email }\n              onChange={ ({ target }) => this.handleInputChange(target) }\n            />\n          </div>\n          <button\n            type=\"submit\"\n            disabled={ !name || !email }\n            data-testid=\"btn-play\"\n          >\n            Jogar\n          </button>\n        </form>\n        <Link to=\"/settings\">Configurações</Link>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    logIn: ({ name, email }) => dispatch(loginActionCreator({ name, email })),\n    loadQuestions: (token) => dispatch(fetchQuestions(token)),\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n\nSignIn.propTypes = {\n  logIn: PropTypes.func.isRequired,\n  loadQuestions: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}